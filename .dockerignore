
# Only include git folder of the main repository
**/.git
!.git/
**/.gitignore

# Ignore test cases and test data of the dependencies
dependencies/**/test
dependencies/**/tests
dependencies/**/regtests
dependencies/parsers/phonopy-library/example*

# ==============================================================================
# The following part was geneterated based on the .gitignore

# Nomad specific and extra patterns needs to be ignored

.*env/
.pyenv*/
.pytest/
.coverage_html/
.coverage
.coverage.*
*.log.conf
parser.osio.log
docs/*.graffle
gui/.editorconfig
gui/.pnp.cjs
gui/.yarn/
gui/.yarnrc.yml
gui/junit.xml

# Ignore all user-specific configuration files
**/nomad.yaml
gui/public/env.js
!gui/tests/nomad.yaml
!ops/docker-compose/nomad-oasis/configs/nomad.yaml
!ops/docker-compose/nomad-oasis-with-keycloak/configs/nomad.yaml

# Ignore built gui and docs artufacts
nomad/app/static/

nomad/normalizing/data/*.db
nomad/normalizing/data/*.msg

# Sideffect of examples/dos_analyzer.ipynb
examples/workdir/

# Sideffect of running Jupyterhub locally
**/jupyterhub_cookie_secret
**/jupyterhub.sqlite
**/jupyterhub-proxy.pid

# Ignore folder content but keeping folders of docker-compose
**/.volumes/fs/north/users/**/*
**/.volumes/fs/public/**/*
**/.volumes/fs/staging/**/*
**/.volumes/fs/tmp/**/*
**/.volumes/mongo/**/*

# local folder
local
tmp

# https://github.com/github/gitignore/blob/main/Python.gitignore

# Byte-compiled / optimized / DLL files
**/__pycache__/
**/*.py[cod]
**/*$py.class

# C extensions
**/*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/


# https://github.com/github/gitignore/blob/main/Node.gitignore

# Logs
gui/**/logs
gui/**/*.log
gui/**/npm-debug.log*
gui/**/yarn-debug.log*
gui/**/yarn-error.log*
gui/**/lerna-debug.log*
gui/**/.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
gui/**/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
gui/**/pids
gui/**/*.pid
gui/**/*.seed
gui/**/*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
gui/**/lib-cov

# Coverage directory used by tools like istanbul
gui/**/coverage
gui/**/*.lcov

# nyc test coverage
gui/**/.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
gui/**/.grunt

# Bower dependency directory (https://bower.io/)
gui/**/bower_components

# node-waf configuration
gui/**/.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
gui/**/build/Release

# Dependency directories
gui/**/node_modules/
gui/**/jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
gui/**/web_modules/

# TypeScript cache
gui/**/*.tsbuildinfo

# Optional npm cache directory
gui/**/.npm

# Optional eslint cache
gui/**/.eslintcache

# Optional stylelint cache
gui/**/.stylelintcache

# Microbundle cache
gui/**/.rpt2_cache/
gui/**/.rts2_cache_cjs/
gui/**/.rts2_cache_es/
gui/**/.rts2_cache_umd/

# Optional REPL history
gui/**/.node_repl_history

# Output of 'npm pack'
gui/**/*.tgz

# Yarn Integrity file
gui/**/.yarn-integrity

# dotenv environment variable files
gui/**/.env
gui/**/.env.development.local
gui/**/.env.test.local
gui/**/.env.production.local
gui/**/.env.local

# parcel-bundler cache (https://parceljs.org/)
gui/**/.cache
gui/**/.parcel-cache

# Next.js build output
gui/**/.next
gui/**/out

# Nuxt.js build / generate output
gui/**/.nuxt
gui/**/dist

# Gatsby files
gui/**/.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
gui/**/.vuepress/dist

# vuepress v2.x temp and cache directory
gui/**/.temp
gui/**/.cache

# Docusaurus cache and generated files
gui/**/.docusaurus

# Serverless directories
gui/**/.serverless/

# FuseBox cache
gui/**/.fusebox/

# DynamoDB Local files
gui/**/.dynamodb/

# TernJS port file
gui/**/.tern-port

# Stores VSCode versions used for testing VSCode extensions
gui/**/.vscode-test

# yarn v2
gui/**/.yarn/cache
gui/**/.yarn/unplugged
gui/**/.yarn/build-state.yml
gui/**/.yarn/install-state.gz
gui/**/.pnp.*


# https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore/

**/.vscode/*
!**/.vscode/settings.json
# !.vscode/tasks.json
# !.vscode/launch.json
# !.vscode/extensions.json
!**/.vscode/*.code-snippets

# Local History for Visual Studio Code
**/.history/

# Built Visual Studio Code Extensions
**/*.vsix


# https://github.com/github/gitignore/blob/main/Global/macOS.gitignore

# General
**/.DS_Store
**/.AppleDouble
**/.LSOverride

# Icon must end with two \r
**/Icon


# Thumbnails
**/._*

# Files that might appear in the root of a volume
**/.DocumentRevisions-V100
**/.fseventsd
**/.Spotlight-V100
**/.TemporaryItems
**/.Trashes
**/.VolumeIcon.icns
**/.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
**/.AppleDB
**/.AppleDesktop
**/Network Trash Folder
**/Temporary Items
**/.apdisk


# https://github.com/github/gitignore/blob/main/Global/Windows.gitignore

# Windows thumbnail cache files
**/Thumbs.db
**/Thumbs.db:encryptable
**/ehthumbs.db
**/ehthumbs_vista.db

# Dump file
**/*.stackdump

# Folder config file
**/[Dd]esktop.ini

# Recycle Bin used on file shares
**/$RECYCLE.BIN/

# Windows Installer files
**/*.cab
**/*.msi
**/*.msix
**/*.msm
**/*.msp

# Windows shortcuts
**/*.lnk


# https://github.com/github/gitignore/blob/main/Global/Linux.gitignore

**/*~

# temporary files which can be created if a process still has a handle open of a deleted file
**/.fuse_hidden*

# KDE directory preferences
**/.directory

# Linux trash folder which might appear on any partition or disk
**/.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
**/.nfs*

